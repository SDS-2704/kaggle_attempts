import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Assuming you have already loaded and preprocessed your training data

# Split the data into training and validation sets
train_set, val_set = train_test_split(train_data, test_size=0.2, random_state=42)

# Preprocess the text data using TF-IDF vectorization
vectorizer = TfidfVectorizer(max_features=10000, stop_words="english", ngram_range=(1, 2))
X_train = vectorizer.fit_transform(train_set["text"])
X_val = vectorizer.transform(val_set["text"])

# Create the target labels
y_train = train_set["generated"]  # Assuming "label" is the column indicating student or LLM
y_val = val_set["generated"]

# Train a Multinomial Naive Bayes classifier with tuned hyperparameters
classifier = MultinomialNB(alpha=0.1)  # Adjust alpha based on your hyperparameter tuning
classifier.fit(X_train, y_train)

# Make predictions on the validation set
val_predictions = classifier.predict(X_val)

# Evaluate the model
accuracy = accuracy_score(y_val, val_predictions)
print("Accuracy:", accuracy)

# Print classification report and confusion matrix for more insights
print("Classification Report:")
print(classification_report(y_val, val_predictions))

print("Confusion Matrix:")
print(confusion_matrix(y_val, val_predictions))
