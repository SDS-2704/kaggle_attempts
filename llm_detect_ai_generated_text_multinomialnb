import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# Loading the training data
train_data = pd.read_csv(r"C:\Users\Shivam Dutt Sharma\Desktop\Kaggle\LLM - Detect AI Generated Text\llm-detect-ai-generated-text\train_essays.csv")

# Splitting the data into training and validation sets
train_set, val_set = train_test_split(train_data, test_size=0.2, random_state=42)

# Preprocessing the text data using TF-IDF vectorization
vectorizer = TfidfVectorizer(max_features=5000, stop_words="english")
X_train = vectorizer.fit_transform(train_set["text"])
X_val = vectorizer.transform(val_set["text"])

# Creating the target labels
y_train = train_set["generated"]  # Assuming "label" is the column indicating student or LLM
y_val = val_set["generated"]

# Training a simple Naive Bayes classifier
classifier = MultinomialNB()
classifier.fit(X_train, y_train)

# Making predictions on the validation set
predictions = classifier.predict(X_val)
# predictions = classifier.predict_proba(X_val)[:, 1]
# Evaluating the model
accuracy = accuracy_score(y_val, predictions)
report = classification_report(y_val, predictions)

print(f"Accuracy: {accuracy}")
print("Classification Report:")
print(report)

# Using the trained model to make predictions on the test set

test_data = pd.read_csv(r"C:\Users\Shivam Dutt Sharma\Desktop\Kaggle\LLM - Detect AI Generated Text\llm-detect-ai-generated-text\test_essays.csv")
X_test = vectorizer.transform(test_data["text"])
test_predictions = classifier.predict_proba(X_test)[:, 1]
# test_data["generated"] = test_predictions
submission_df = pd.DataFrame({"id": test_data["id"], "generated": test_predictions})
submission_df.to_csv("submission.csv", index=False)
